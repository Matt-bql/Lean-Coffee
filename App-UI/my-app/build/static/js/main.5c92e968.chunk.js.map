{"version":3,"sources":["components/Header.js","components/Contexts/TopicContext.js","components/ContentBody.js","components/ContentBodyParent.js","components/Timer/Timer.js","components/DragandDrop/DragandDropContainer.js.js","components/DiscussionSession.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","TopicContext","React","createContext","ContentBody","topic","id","getTopics","setTopics","setIsLoading","topics","useState","inputChange","setInputChange","isTopicClicked","setIsTopicClicked","itemId","a","axios","delete","filter","item","newArr","console","log","topicId","alert","updatedTopic","topicTitle","post","map","updatedItem","onInput","e","target","value","onClick","submitTopicTitleChange","deleteTopic","ContentBodyParent","createTopic","input","topicInputHandler","useContext","isLoading","type","placeholder","style","color","Timer","seconds","setSeconds","minutes","setminutes","isClicked","setIsClicked","endTime","Date","getTime","pad","Math","floor","slice","requestAnimationFrame","showTime","remainingTime","DragandDropContainer","useEffect","columnsFromBackend","uuidv4","name","items","columns","setColumns","display","justifyContent","height","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","column","copiedItems","Object","entries","columnId","flexDirection","alignItems","margin","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","padding","width","minHeight","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","DiscussionSession","theme","createTheme","palette","primary","main","secondary","error","red","A400","default","App","topicInput","setTopicInput","get","then","response","data","res","Items","newTopic","toString","updatedTopics","Container","maxWidth","bgcolor","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c92e968.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <div className='Header-Container'>\n      <div className='Header-Content-Wrapper'>\n        <div className='Home-Nav'>\n          <Link to='/'>Home</Link>\n        </div>\n        <div className='Login-Nav'>{/* <Link to='/discussion'></Link> */}</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport const TopicContext = React.createContext();\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function ContentBody({\n  topic,\n  getTopics,\n  id,\n  setIsLoading,\n  setTopics,\n  topics,\n}) {\n  // State\n  const [inputChange, setInputChange] = useState(\"\");\n  const [isTopicClicked, setIsTopicClicked] = useState(false);\n\n  //Functions\n  async function deleteTopic(itemId) {\n    try {\n      await axios.delete(`http://localhost:8000/api/${topic.id}`);\n      const newArr = await topics.filter(item => item.id !== itemId);\n      await setTopics(newArr);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function inputChangeHandler(e) {\n    setInputChange(e.target.value);\n  }\n\n  async function submitTopicTitleChange(topicId) {\n    if (inputChange === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      try {\n        const updatedTopic = { topicTitle: inputChange };\n        await axios.post(`http://localhost:8000/api/topic/${id}`, updatedTopic);\n        const updatedItem = await topics.map(item => {\n          if (item.id === topicId) {\n            const items = { ...item, topicTitle: inputChange };\n            return items;\n          }\n          return item;\n        });\n        console.log(updatedItem);\n        setTopics(updatedItem);\n        setIsTopicClicked(false);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  return (\n    <div key={id}>\n      {!isTopicClicked ? (\n        <div className='Card-Topics-Wrapper'>\n          <div className='Card-Topics'>\n            <p\n              className='Card-Title'\n              onClick={() => {\n                setIsTopicClicked(true);\n              }}\n            >\n              {topic.topicTitle}\n            </p>\n          </div>\n          <div className='Bottom-Card-Portion'>\n            {/* This is where the voting element will live...\n            <div className='Bottom-Card-Portion-Text'>vote</div>*/}\n            <div\n              onClick={() => deleteTopic(id)}\n              className='Bottom-Card-Portion-Text2'\n            >\n              delete\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className='Card-Topics-Wrapper'>\n          <div className='Card-Topics'>\n            <p className='Card-Title'>\n              <input onInput={inputChangeHandler}></input>\n              <button onClick={() => submitTopicTitleChange(id)}>\n                Submit Change\n              </button>\n            </p>\n          </div>\n          <div className='Bottom-Card-Portion'>\n            {/* This is where the voting element will live...\n            <div className='Bottom-Card-Portion-Text'>vote</div>*/}\n            <div className='Bottom-Card-Portion-Text2'>delete</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { TopicContext } from \"./Contexts/TopicContext\";\nimport ContentBody from \"./ContentBody\";\nimport { Link } from \"react-router-dom\";\nexport default function ContentBodyParent({\n  createTopic,\n  input,\n  topicInputHandler,\n}) {\n  // const topicContext = useContext(TopicContext);\n  const { topics, isLoading, getTopics, setIsLoading, setTopics } =\n    useContext(TopicContext);\n  return (\n    <div className='Main-Topic-Container'>\n      <div className='Topic-Submit-Wrapper'>\n        <button className='Start-Discussion-Button'>\n          <Link className='Start-Discussion-Button-Link' to='/discussion'>\n            Start Discussion\n          </Link>\n        </button>\n        <h1 className='Main-Title'>Input Topic</h1>\n        <input\n          type='text'\n          value={input}\n          placeholder={\"Add new topic...\"}\n          onInput={topicInputHandler}\n        ></input>\n        <button className='submit-button' onClick={createTopic}>\n          Submit\n        </button>\n      </div>\n      <div className='Topic-Child-Container'>\n        <div className='Topic-Child-Container2'>\n          {topics.map(topic => (\n            <div className='Card-Topics-Container' key={topic.id}>\n              {!isLoading ? (\n                <ContentBody\n                  id={topic.id}\n                  topic={topic}\n                  getTopics={getTopics}\n                  isLoading={isLoading}\n                  setIsLoading={setIsLoading}\n                  setTopics={setTopics}\n                  topics={topics}\n                />\n              ) : (\n                <div style={{ color: \"black\" }}>Loading Topics</div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Timer() {\n  const [seconds, setSeconds] = useState();\n  const [minutes, setminutes] = useState();\n  const [isClicked, setIsClicked] = useState(false);\n  function startTimer() {\n    // set our end time\n    setIsClicked(true);\n    const endTime = new Date().getTime() + 301 * 1000;\n\n    // calculate remaining time from now until deadline\n    function getRemainingTime(deadline) {\n      const currentTime = new Date().getTime();\n      return deadline - currentTime;\n    }\n\n    // pad value with zero\n    function pad(value) {\n      return (\"0\" + Math.floor(value)).slice(-2);\n    }\n\n    // show time repeatedly\n    function showTime() {\n      const remainingTime = getRemainingTime(endTime);\n\n      const seconds = pad((remainingTime / 1000) % 60);\n\n      const minutes = pad((remainingTime / (60 * 1000)) % 60);\n\n      setSeconds(seconds);\n      setminutes(minutes);\n\n      // ensure clock only updates if a second or more is remaining\n      if (remainingTime >= 1000) {\n        requestAnimationFrame(showTime);\n      }\n    }\n\n    // kick it all off\n    requestAnimationFrame(showTime);\n  }\n\n  return (\n    <div>\n      <h1>Countdown Clock</h1>\n      <button onClick={startTimer}>Start</button>\n      <div id='clockdiv'>\n        <span id='clock'></span>\n      </div>\n      {!isClicked ? <div></div> : <div>{`${minutes}:${seconds}`}</div>}\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { TopicContext } from \"../Contexts/TopicContext\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function DragandDropContainer() {\n  const { topics } = useContext(TopicContext);\n  useEffect(() => {}, [topics]);\n\n  console.log(\"topics: \", topics);\n  const columnsFromBackend = {\n    [uuidv4()]: {\n      name: \"Requested\",\n      items: topics,\n    },\n    [uuidv4()]: {\n      name: \"Current Discussion\",\n      items: [],\n    },\n    [uuidv4()]: {\n      name: \"Completed\",\n      items: [],\n    },\n  };\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems,\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems,\n        },\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems,\n        },\n      });\n    }\n  };\n  // console.log(columnsFromTheBackend);\n\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      <DragDropContext\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n              key={columnId}\n            >\n              <h2>{column.name}</h2>\n              <div style={{ margin: 8 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightblue\"\n                            : \"lightgrey\",\n                          padding: 4,\n                          width: 250,\n                          minHeight: 500,\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      minHeight: \"50px\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? \"#263B4A\"\n                                        : \"#456C86\",\n                                      color: \"white\",\n                                      ...provided.draggableProps.style,\n                                    }}\n                                  >\n                                    {item.topicTitle}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { TopicContext } from \"./Contexts/TopicContext\";\nimport Timer from \"./Timer/Timer.js\";\nimport DragandDropContainer from \"./DragandDrop/DragandDropContainer.js.js\";\n\nexport default function DiscussionSession() {\n  const { topics } = useContext(TopicContext);\n  return (\n    <div style={{ color: \"white\" }}>\n      Session Started.\n      <Timer />\n      <DragandDropContainer />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\n\nimport { Container, createTheme } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  // Functions\n  // Fetching data\n  async function getTopics() {\n    try {\n      setIsLoading(true);\n      await axios\n        .get(\"http://localhost:8000/api/topics\")\n        .then(response => response.data)\n        .then(res => setTopics(res.Items))\n        .then(setIsLoading(false));\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    }\n  }\n\n  // Grabs input data to eventually use when 'add topic' button is clicked.\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  }\n  // make post -- gives me response. I update ui using react\n  // this function makes use of optimistic ui concepts..\n  async function createTopic() {\n    if (topicInput === \"\") {\n      alert(\"Topic cannot be empty.\");\n    } else {\n      try {\n        setIsLoading(true);\n        const newTopic = {\n          id: uuidv4().toString(),\n          topicTitle: topicInput,\n        };\n        setTopicInput(\"\");\n        await axios\n          .post(\"http://localhost:8000/api\", newTopic)\n          .then(res => {\n            setIsLoading(false);\n            return res;\n          })\n          .then(res => {\n            // make sure update happened. Only update the ui if the\n            // DB has been updated. if not, show error.\n            console.log(\"foobar\", res);\n            const updatedTopics = [...topics, newTopic];\n            setTopics(updatedTopics);\n          });\n        // .then(getTopics());\n      } catch (err) {\n        console.log(\"error with 'createTopic()': \", err);\n      }\n    }\n  }\n\n  return (\n    // Using React-Router for Home/Session Pages\n    // Implenting-Material-UI\n    <>\n      {/* wrapping app in container to test how to use material ui */}\n      <Container theme={theme} maxWidth='md' bgcolor='primary'>\n        <Router>\n          <Header className='Header' />\n          <div className='App-Body'>\n            <Switch>\n              <TopicContext.Provider\n                value={{\n                  topics,\n                  isLoading,\n                  getTopics,\n                  setIsLoading,\n                  setTopics,\n                }}\n              >\n                <Route exact path='/'>\n                  <div>\n                    <ContentBodyParent\n                      className='Topic-Child-Container'\n                      createTopic={createTopic}\n                      input={topicInput}\n                      topicInputHandler={topicInputHandler}\n                    />\n                  </div>\n                </Route>\n                <Route exact path='/discussion'>\n                  <DiscussionSession />\n                </Route>\n              </TopicContext.Provider>\n            </Switch>\n          </div>\n        </Router>\n      </Container>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}