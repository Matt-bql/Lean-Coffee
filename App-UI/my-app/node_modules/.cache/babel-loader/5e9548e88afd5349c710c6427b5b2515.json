{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/DragandDrop/DragandDropContainer.js.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { TopicContext } from \"../Contexts/TopicContext\";\nimport Column from \"./Column.js\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { v4 as uuidv4 } from \"uuid\"; // const som = [\n//   { id: uuidv4(), content: \"asdf\" },\n//   {\n//     id: uuidv4(),\n//     content: \"lose\",\n//   },\n// ];\n// console.log(\"som: \", som);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DragandDropContainer() {\n  _s();\n\n  const {\n    topics,\n    setTopics\n  } = useContext(TopicContext);\n  console.log(\"topics: \", topics);\n  const columnsFromTheBackend = {\n    [uuidv4()]: {\n      title: \"column1\",\n      items: [topics]\n    }\n  }; // console.log(columnsFromTheBackend);\n\n  const [columns, setColumns] = useState(columnsFromTheBackend);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDropEnd: result => console.log(result),\n      children: Object.entries(columns).map(([id, column]) => {\n        return /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: id,\n          children: (provided, snapshot) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n              ref: provided.innerRef,\n              style: {\n                background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\",\n                padding: 4,\n                width: 250,\n                minHeight: 500\n              },\n              children: column.items.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.id,\n                  index: index,\n                  children: [\"aadsf\", (provided, snapshot) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      style: {\n                        userSelect: \"none\",\n                        padding: 16,\n                        margin: \"0 0 8px 0\",\n                        minHeight: \"50px\",\n                        backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#456C86\",\n                        color: \"white\",\n                        ...provided.draggableProps.style\n                      },\n                      children: console.log(\"lll\", item.content)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 31\n                    }, this);\n                  }]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragandDropContainer, \"tTO8KPSDbemh0GZP/BZ7BZTXD+I=\");\n\n_c = DragandDropContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragandDropContainer\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/DragandDrop/DragandDropContainer.js.js"],"names":["React","useContext","useState","TopicContext","Column","DragDropContext","Draggable","Droppable","v4","uuidv4","DragandDropContainer","topics","setTopics","console","log","columnsFromTheBackend","title","items","columns","setColumns","display","justifyContent","height","result","Object","entries","map","id","column","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","index","draggableProps","dragHandleProps","userSelect","margin","backgroundColor","isDragging","color","style","content"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { TopicContext } from \"../Contexts/TopicContext\";\nimport Column from \"./Column.js\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// const som = [\n//   { id: uuidv4(), content: \"asdf\" },\n//   {\n//     id: uuidv4(),\n//     content: \"lose\",\n//   },\n// ];\n// console.log(\"som: \", som);\n\nexport default function DragandDropContainer() {\n  const { topics, setTopics } = useContext(TopicContext);\n  console.log(\"topics: \", topics);\n  const columnsFromTheBackend = {\n    [uuidv4()]: {\n      title: \"column1\",\n      items: [topics],\n    },\n  };\n  // console.log(columnsFromTheBackend);\n\n  const [columns, setColumns] = useState(columnsFromTheBackend);\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      <DragDropContext onDropEnd={result => console.log(result)}>\n        {Object.entries(columns).map(([id, column]) => {\n          return (\n            <Droppable droppableId={id}>\n              {(provided, snapshot) => {\n                return (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      background: snapshot.isDraggingOver\n                        ? \"lightblue\"\n                        : \"lightgrey\",\n                      padding: 4,\n                      width: 250,\n                      minHeight: 500,\n                    }}\n                  >\n                    {column.items.map((item, index) => {\n                      return (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id}\n                          index={index}\n                        >\n                          aadsf\n                          {(provided, snapshot) => {\n                            return (\n                              <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={{\n                                  userSelect: \"none\",\n                                  padding: 16,\n                                  margin: \"0 0 8px 0\",\n                                  minHeight: \"50px\",\n                                  backgroundColor: snapshot.isDragging\n                                    ? \"#263B4A\"\n                                    : \"#456C86\",\n                                  color: \"white\",\n                                  ...provided.draggableProps.style,\n                                }}\n                              >\n                                {console.log(\"lll\", item.content)}\n                              </div>\n                            );\n                          }}\n                        </Draggable>\n                      );\n                    })}\n                  </div>\n                );\n              }}\n            </Droppable>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}