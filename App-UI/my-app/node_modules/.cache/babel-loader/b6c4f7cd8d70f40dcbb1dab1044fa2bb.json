{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Styles/App.scss\";\nimport ContentBody from \"./components/ContentBody.js\";\nimport \"./Styles/Reset.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  useEffect(() => {\n    getTopics();\n  }, []); // Functions;\n\n  async function getTopics() {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/topics\");\n      const responseJson = await response.json();\n      setTopics(responseJson.Items);\n    } catch (err) {\n      console.log(\"Did not fetch topics!!\", err);\n    }\n  }\n\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  }\n\n  async function createTopic() {\n    const newTopic = {\n      id: Date.now().toString(),\n      topicTitle: topicInput\n    };\n\n    if (topicInput === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      console.log(newTopic);\n      const info = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTopic)\n      };\n      await fetch(\"http://localhost:8000/api\", info);\n    }\n\n    getTopics();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Input Topic Below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: topicInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createTopic,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), topics.map(topic => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ContentBody, {\n          id: topic.id,\n          topic: topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"flqiUnG1JR6ufOyGBTccox/35kY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js"],"names":["React","useState","useEffect","ContentBody","App","topics","setTopics","topicInput","setTopicInput","getTopics","response","fetch","responseJson","json","Items","err","console","log","topicInputHandler","e","target","value","createTopic","newTopic","id","Date","now","toString","topicTitle","alert","info","method","headers","body","JSON","stringify","map","topic"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAO,oBAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT,CAL4B,CAS5B;;AACA,iBAAeA,SAAf,GAA2B;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAP,MAAAA,SAAS,CAACM,YAAY,CAACE,KAAd,CAAT;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,GAAtC;AACD;AACF;;AAED,WAASG,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BX,IAAAA,aAAa,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD;;AAED,iBAAeC,WAAf,GAA6B;AAC3B,UAAMC,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,GAAWC,QAAX,EADW;AAEfC,MAAAA,UAAU,EAAErB;AAFG,KAAjB;;AAIA,QAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrBsB,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,KAFD,MAEO;AACLb,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACA,YAAMO,IAAI,GAAG;AACXC,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFE;AAKXC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,QAAf;AALK,OAAb;AAOA,YAAMZ,KAAK,CAAC,2BAAD,EAA8BmB,IAA9B,CAAX;AACD;;AACDrB,IAAAA,SAAS;AACV;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,OAAO,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGjB,MAAM,CAAC+B,GAAP,CAAWC,KAAK,iBACf;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAEA,KAAK,CAACb,EAAvB;AAA2B,UAAA,KAAK,EAAEa;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,KAAK,CAACb,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA3DuBpB,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Styles/App.scss\";\nimport ContentBody from \"./components/ContentBody.js\";\nimport \"./Styles/Reset.css\";\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  // Functions;\n  async function getTopics() {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/topics\");\n      const responseJson = await response.json();\n      setTopics(responseJson.Items);\n    } catch (err) {\n      console.log(\"Did not fetch topics!!\", err);\n    }\n  }\n\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  }\n\n  async function createTopic() {\n    const newTopic = {\n      id: Date.now().toString(),\n      topicTitle: topicInput,\n    };\n    if (topicInput === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      console.log(newTopic);\n      const info = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newTopic),\n      };\n      await fetch(\"http://localhost:8000/api\", info);\n    }\n    getTopics();\n  }\n\n  return (\n    <div className='App'>\n      <div>\n        <h1>Input Topic Below</h1>\n        <input onInput={topicInputHandler}></input>\n        <button onClick={createTopic}>Submit</button>\n        {topics.map(topic => (\n          <div key={topic.id}>\n            <ContentBody id={topic.id} topic={topic} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}