{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [inputChange, setInputChange] = useState(\"\");\n  const [isTopicClicked, setIsTopicClicked] = useState(false);\n  useEffect(() => {\n    getTopics();\n  }, []);\n  console.log(topicInput); // Functions;\n\n  async function getTopics() {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/topics\");\n      const topics = await response.data;\n      setTopics(topics.Items);\n      console.log(response);\n      console.log(topics);\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    }\n  }\n\n  function topicInputHandler(e) {\n    console.log(e);\n    setTopicInput(e.target.value);\n  }\n\n  async function createTopic() {\n    console.log(\"topics\", topics);\n    const newTopic = {\n      id: uuidv4().toString(),\n      topicTitle: topicInput\n    }; // setTopicInput(\"\");\n\n    if (topicInput === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      try {\n        console.log(newTopic);\n        console.log(JSON.stringify(newTopic));\n        const info = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newTopic)\n        };\n        console.log(info);\n        await fetch(\"http://localhost:8000/api\", info);\n        console.log(\"topics\", topics);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  function deleteTopic(id) {\n    try {\n      axios.delete(`http://localhost:8000/api/${id}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function inputChangeHandler(e) {\n    setInputChange(e.target.value);\n  }\n\n  async function submitTopicTitleChange(id) {\n    if (inputChange === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      try {\n        const updatedTopic = {\n          topicTitle: inputChange\n        };\n        const info = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(updatedTopic)\n        };\n        await fetch(`http://localhost:8000/api/topic/${id}`, info);\n      } catch (err) {\n        console.log(err);\n      }\n\n      changeTopicClickedToFalse();\n    }\n  }\n\n  function changeTopicClickedToFalse() {\n    setIsTopicClicked(false);\n  }\n\n  return (\n    /*#__PURE__*/\n    // Using React-Router for Home/Session Pages\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: \"Header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-Body\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(TopicContext.Provider, {\n              value: {\n                deleteTopic,\n                createTopic,\n                inputChangeHandler,\n                isTopicClicked,\n                setIsTopicClicked,\n                submitTopicTitleChange,\n                topics,\n                topicInputHandler\n              },\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(ContentBodyParent, {\n                    className: \"Topic-Child-Container\",\n                    createTopic: createTopic,\n                    getTopics: getTopics,\n                    input: topicInput,\n                    topicInputHandler: topicInputHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/discussion\",\n                children: /*#__PURE__*/_jsxDEV(DiscussionSession, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"RghAsQ4LjRbd92rhJeGPHtaBrHE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","v4","uuidv4","axios","Header","ContentBodyParent","DiscussionSession","TopicContext","App","topics","setTopics","topicInput","setTopicInput","inputChange","setInputChange","isTopicClicked","setIsTopicClicked","getTopics","console","log","response","get","data","Items","err","topicInputHandler","e","target","value","createTopic","newTopic","id","toString","topicTitle","alert","JSON","stringify","info","method","headers","body","fetch","deleteTopic","delete","inputChangeHandler","submitTopicTitleChange","updatedTopic","changeTopicClickedToFalse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [inputChange, setInputChange] = useState(\"\");\n  const [isTopicClicked, setIsTopicClicked] = useState(false);\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n  console.log(topicInput);\n  // Functions;\n  async function getTopics() {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/topics\");\n      const topics = await response.data;\n      setTopics(topics.Items);\n      console.log(response);\n      console.log(topics);\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    }\n  }\n\n  function topicInputHandler(e) {\n    console.log(e);\n    setTopicInput(e.target.value);\n  }\n\n  async function createTopic() {\n    console.log(\"topics\", topics);\n    const newTopic = {\n      id: uuidv4().toString(),\n      topicTitle: topicInput,\n    };\n    // setTopicInput(\"\");\n    if (topicInput === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      try {\n        console.log(newTopic);\n        console.log(JSON.stringify(newTopic));\n        const info = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(newTopic),\n        };\n        console.log(info);\n        await fetch(\"http://localhost:8000/api\", info);\n        console.log(\"topics\", topics);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  function deleteTopic(id) {\n    try {\n      axios.delete(`http://localhost:8000/api/${id}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function inputChangeHandler(e) {\n    setInputChange(e.target.value);\n  }\n\n  async function submitTopicTitleChange(id) {\n    if (inputChange === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      try {\n        const updatedTopic = { topicTitle: inputChange };\n        const info = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(updatedTopic),\n        };\n        await fetch(`http://localhost:8000/api/topic/${id}`, info);\n      } catch (err) {\n        console.log(err);\n      }\n      changeTopicClickedToFalse();\n    }\n  }\n\n  function changeTopicClickedToFalse() {\n    setIsTopicClicked(false);\n  }\n\n  return (\n    // Using React-Router for Home/Session Pages\n    <div className='App'>\n      <Router>\n        <Header className='Header' />\n        <div className='App-Body'>\n          <Switch>\n            <TopicContext.Provider\n              value={{\n                deleteTopic,\n                createTopic,\n                inputChangeHandler,\n                isTopicClicked,\n                setIsTopicClicked,\n                submitTopicTitleChange,\n                topics,\n                topicInputHandler,\n              }}\n            >\n              <Route exact path='/'>\n                <div>\n                  <ContentBodyParent\n                    className='Topic-Child-Container'\n                    createTopic={createTopic}\n                    getTopics={getTopics}\n                    input={topicInput}\n                    topicInputHandler={topicInputHandler}\n                  />\n                </div>\n              </Route>\n              <Route exact path='/discussion'>\n                <DiscussionSession />\n              </Route>\n            </TopicContext.Provider>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}