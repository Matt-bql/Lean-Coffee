{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    getTopics();\n  }, []); // Functions\n\n  async function getTopics() {\n    try {\n      setIsLoading(true);\n      await axios.get(\"http://localhost:8000/api/topics\").then(response => response.data).then(res => setTopics(res.Items)).then(setIsLoading(false));\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    }\n  } // Grabs input data to eventually use when 'add topic' button is clicked.\n\n\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  }\n\n  async function createTopic() {\n    if (topicInput === \"\") {\n      alert(\"Topic cannot be empty.\");\n    } else {\n      try {\n        const newTopic = {\n          id: uuidv4().toString(),\n          topicTitle: topicInput\n        };\n        setTopicInput(\"\");\n        console.log(\"before\");\n        await axios.post(\"http://localhost:8000/api\", newTopic);\n        console.log(\"after\");\n        await getTopics();\n      } catch (err) {\n        console.log(\"error with 'createTopic()': \", err);\n      }\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // Using React-Router for Home/Session Pages\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            className: \"Header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-Body\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: /*#__PURE__*/_jsxDEV(TopicContext.Provider, {\n                value: {\n                  topics,\n                  isLoading,\n                  getTopics\n                },\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  exact: true,\n                  path: \"/\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(ContentBodyParent, {\n                      className: \"Topic-Child-Container\",\n                      createTopic: createTopic,\n                      input: topicInput,\n                      topicInputHandler: topicInputHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  exact: true,\n                  path: \"/discussion\",\n                  children: /*#__PURE__*/_jsxDEV(DiscussionSession, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n\n_s(App, \"021OYpoSI43faB3sS2H0MnWWedg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","v4","uuidv4","axios","Header","ContentBodyParent","DiscussionSession","TopicContext","ThemeProvider","App","topics","setTopics","topicInput","setTopicInput","isLoading","setIsLoading","getTopics","get","then","response","data","res","Items","err","console","log","topicInputHandler","e","target","value","createTopic","alert","newTopic","id","toString","topicTitle","post"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  // Functions\n  async function getTopics() {\n    try {\n      setIsLoading(true);\n      await axios\n        .get(\"http://localhost:8000/api/topics\")\n        .then(response => response.data)\n        .then(res => setTopics(res.Items))\n        .then(setIsLoading(false));\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    }\n  }\n\n  // Grabs input data to eventually use when 'add topic' button is clicked.\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  }\n\n  async function createTopic() {\n    if (topicInput === \"\") {\n      alert(\"Topic cannot be empty.\");\n    } else {\n      try {\n        const newTopic = {\n          id: uuidv4().toString(),\n          topicTitle: topicInput,\n        };\n        setTopicInput(\"\");\n        console.log(\"before\");\n        await axios.post(\"http://localhost:8000/api\", newTopic);\n        console.log(\"after\");\n        await getTopics();\n      } catch (err) {\n        console.log(\"error with 'createTopic()': \", err);\n      }\n    }\n  }\n\n  return (\n    // Using React-Router for Home/Session Pages\n    <>\n      <ThemeProvider>\n        {/* <div className='App'> */}\n        <Router>\n          <Header className='Header' />\n          <div className='App-Body'>\n            <Switch>\n              <TopicContext.Provider value={{ topics, isLoading, getTopics }}>\n                <Route exact path='/'>\n                  <div>\n                    <ContentBodyParent\n                      className='Topic-Child-Container'\n                      createTopic={createTopic}\n                      input={topicInput}\n                      topicInputHandler={topicInputHandler}\n                    />\n                  </div>\n                </Route>\n                <Route exact path='/discussion'>\n                  <DiscussionSession />\n                </Route>\n              </TopicContext.Provider>\n            </Switch>\n          </div>\n        </Router>\n        {/* </div> */}\n      </ThemeProvider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}