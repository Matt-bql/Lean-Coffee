{"ast":null,"code":"class Countdown {\n  constructor() {\n    this.duration = 0;\n    this.elapsed = 0;\n    this.isActive = false;\n    this.lastFrameTime = Date.now();\n\n    this.onTick = () => {};\n\n    this.onCompleted = () => {};\n\n    this.tick();\n  }\n\n  getTimeLeft() {\n    const t = this.duration - this.elapsed;\n    return Math.max(0, t);\n  }\n\n  pause() {\n    this.isActive = false;\n    return this;\n  }\n\n  reset() {\n    this.elapsed = 0;\n  }\n\n  setDuration(seconds) {\n    this.lastFrameTime = Date.now();\n    this.duration = seconds;\n    return this;\n  }\n\n  start() {\n    this.isActive = true;\n    return this;\n  }\n\n  tick() {\n    const currentFrameTime = Date.now();\n    const deltaTime = currentFrameTime - this.lastFrameTime;\n    this.lastFrameTime = currentFrameTime;\n\n    if (this.isActive) {\n      this.elapsed += deltaTime / 1000;\n      this.onTick(this.getTimeLeft());\n\n      if (this.getTimeLeft() <= 0) {\n        this.pause();\n        this.onCompleted();\n      }\n    }\n\n    window.requestAnimationFrame(this.tick.bind(this));\n  }\n\n}\n\nconst countdown = new Countdown().setDuration(10);\nconst label = document.querySelector(\".time\");\ndocument.querySelector(\".pause\").addEventListener(\"click\", () => {\n  countdown.pause();\n});\ndocument.querySelector(\".reset\").addEventListener(\"click\", () => {\n  countdown.reset();\n  label.innerHTML = Math.ceil(countdown.getTimeLeft());\n});\ndocument.querySelector(\".start\").addEventListener(\"click\", () => {\n  countdown.start();\n});\n\ncountdown.onTick = time => {\n  label.innerHTML = Math.round(time);\n};\n\ncountdown.onCompleted = () => {\n  console.log(\"DONE\");\n};","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Timer/Timer.js"],"names":["Countdown","constructor","duration","elapsed","isActive","lastFrameTime","Date","now","onTick","onCompleted","tick","getTimeLeft","t","Math","max","pause","reset","setDuration","seconds","start","currentFrameTime","deltaTime","window","requestAnimationFrame","bind","countdown","label","document","querySelector","addEventListener","innerHTML","ceil","time","round","console","log"],"mappings":"AAAA,MAAMA,SAAN,CAAgB;AACdC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,aAAL,GAAqBC,IAAI,CAACC,GAAL,EAArB;;AAEA,SAAKC,MAAL,GAAc,MAAM,CAAE,CAAtB;;AACA,SAAKC,WAAL,GAAmB,MAAM,CAAE,CAA3B;;AAEA,SAAKC,IAAL;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,UAAMC,CAAC,GAAG,KAAKV,QAAL,GAAgB,KAAKC,OAA/B;AAEA,WAAOU,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,CAAZ,CAAP;AACD;;AAEDG,EAAAA,KAAK,GAAG;AACN,SAAKX,QAAL,GAAgB,KAAhB;AAEA,WAAO,IAAP;AACD;;AAEDY,EAAAA,KAAK,GAAG;AACN,SAAKb,OAAL,GAAe,CAAf;AACD;;AAEDc,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKb,aAAL,GAAqBC,IAAI,CAACC,GAAL,EAArB;AACA,SAAKL,QAAL,GAAgBgB,OAAhB;AAEA,WAAO,IAAP;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAKf,QAAL,GAAgB,IAAhB;AAEA,WAAO,IAAP;AACD;;AAEDM,EAAAA,IAAI,GAAG;AACL,UAAMU,gBAAgB,GAAGd,IAAI,CAACC,GAAL,EAAzB;AACA,UAAMc,SAAS,GAAGD,gBAAgB,GAAG,KAAKf,aAA1C;AACA,SAAKA,aAAL,GAAqBe,gBAArB;;AAEA,QAAI,KAAKhB,QAAT,EAAmB;AACjB,WAAKD,OAAL,IAAgBkB,SAAS,GAAG,IAA5B;AACA,WAAKb,MAAL,CAAY,KAAKG,WAAL,EAAZ;;AAEA,UAAI,KAAKA,WAAL,MAAsB,CAA1B,EAA6B;AAC3B,aAAKI,KAAL;AACA,aAAKN,WAAL;AACD;AACF;;AAEDa,IAAAA,MAAM,CAACC,qBAAP,CAA6B,KAAKb,IAAL,CAAUc,IAAV,CAAe,IAAf,CAA7B;AACD;;AA1Da;;AA6DhB,MAAMC,SAAS,GAAG,IAAIzB,SAAJ,GAAgBiB,WAAhB,CAA4B,EAA5B,CAAlB;AAEA,MAAMS,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AAEAD,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,gBAAjC,CAAkD,OAAlD,EAA2D,MAAM;AAC/DJ,EAAAA,SAAS,CAACV,KAAV;AACD,CAFD;AAIAY,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,gBAAjC,CAAkD,OAAlD,EAA2D,MAAM;AAC/DJ,EAAAA,SAAS,CAACT,KAAV;AACAU,EAAAA,KAAK,CAACI,SAAN,GAAkBjB,IAAI,CAACkB,IAAL,CAAUN,SAAS,CAACd,WAAV,EAAV,CAAlB;AACD,CAHD;AAKAgB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,gBAAjC,CAAkD,OAAlD,EAA2D,MAAM;AAC/DJ,EAAAA,SAAS,CAACN,KAAV;AACD,CAFD;;AAIAM,SAAS,CAACjB,MAAV,GAAmBwB,IAAI,IAAI;AACzBN,EAAAA,KAAK,CAACI,SAAN,GAAkBjB,IAAI,CAACoB,KAAL,CAAWD,IAAX,CAAlB;AACD,CAFD;;AAIAP,SAAS,CAAChB,WAAV,GAAwB,MAAM;AAC5ByB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,CAFD","sourcesContent":["class Countdown {\n  constructor() {\n    this.duration = 0;\n    this.elapsed = 0;\n    this.isActive = false;\n    this.lastFrameTime = Date.now();\n\n    this.onTick = () => {};\n    this.onCompleted = () => {};\n\n    this.tick();\n  }\n\n  getTimeLeft() {\n    const t = this.duration - this.elapsed;\n\n    return Math.max(0, t);\n  }\n\n  pause() {\n    this.isActive = false;\n\n    return this;\n  }\n\n  reset() {\n    this.elapsed = 0;\n  }\n\n  setDuration(seconds) {\n    this.lastFrameTime = Date.now();\n    this.duration = seconds;\n\n    return this;\n  }\n\n  start() {\n    this.isActive = true;\n\n    return this;\n  }\n\n  tick() {\n    const currentFrameTime = Date.now();\n    const deltaTime = currentFrameTime - this.lastFrameTime;\n    this.lastFrameTime = currentFrameTime;\n\n    if (this.isActive) {\n      this.elapsed += deltaTime / 1000;\n      this.onTick(this.getTimeLeft());\n\n      if (this.getTimeLeft() <= 0) {\n        this.pause();\n        this.onCompleted();\n      }\n    }\n\n    window.requestAnimationFrame(this.tick.bind(this));\n  }\n}\n\nconst countdown = new Countdown().setDuration(10);\n\nconst label = document.querySelector(\".time\");\n\ndocument.querySelector(\".pause\").addEventListener(\"click\", () => {\n  countdown.pause();\n});\n\ndocument.querySelector(\".reset\").addEventListener(\"click\", () => {\n  countdown.reset();\n  label.innerHTML = Math.ceil(countdown.getTimeLeft());\n});\n\ndocument.querySelector(\".start\").addEventListener(\"click\", () => {\n  countdown.start();\n});\n\ncountdown.onTick = time => {\n  label.innerHTML = Math.round(time);\n};\n\ncountdown.onCompleted = () => {\n  console.log(\"DONE\");\n};\n"]},"metadata":{},"sourceType":"module"}