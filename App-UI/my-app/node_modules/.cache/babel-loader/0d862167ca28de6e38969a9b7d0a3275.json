{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/DiscussionSession.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { TopicContext } from \"./Contexts/TopicContext\";\nimport Timer from \"./Timer/Timer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DiscussionSession() {\n  _s();\n\n  const {\n    topics,\n    setTopics\n  } = useContext(TopicContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Session Started.\", /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), \"hello\", topics.map(topic => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: topic.TopicTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DiscussionSession, \"uN+MTSqLWGJzHce9qFpgOJ1w//E=\");\n\n_c = DiscussionSession;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiscussionSession\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/DiscussionSession.js"],"names":["React","useContext","TopicContext","Timer","DiscussionSession","topics","setTopics","map","topic","TopicTitle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBL,UAAU,CAACC,YAAD,CAAxC;AACA,sBACE;AAAA,gDAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFF,WAIGG,MAAM,CAACE,GAAP,CAAWC,KAAK,iBACf;AAAA,gBAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAZuBL,iB;;KAAAA,iB","sourcesContent":["import React, { useContext } from \"react\";\nimport { TopicContext } from \"./Contexts/TopicContext\";\nimport Timer from \"./Timer/Timer.js\";\n\nexport default function DiscussionSession() {\n  const { topics, setTopics } = useContext(TopicContext);\n  return (\n    <div>\n      Session Started.\n      <Timer />\n      hello\n      {topics.map(topic => (\n        <div>{topic.TopicTitle}</div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}