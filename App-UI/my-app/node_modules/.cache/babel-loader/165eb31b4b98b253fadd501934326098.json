{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Timer/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n\n  const [seconds, setSeconds] = useState();\n  const [minutes, setminutes] = useState();\n  const [isClicked, setIsClicked] = useState(false);\n\n  function startTimer() {\n    // set our end time\n    setIsClicked(true);\n    const endTime = new Date().getTime() + 301 * 1000; // calculate remaining time from now until deadline\n\n    function getRemainingTime(deadline) {\n      const currentTime = new Date().getTime();\n      return deadline - currentTime;\n    } // pad value with zero\n\n\n    function pad(value) {\n      return (\"0\" + Math.floor(value)).slice(-2);\n    } // show time repeatedly\n\n\n    function showTime() {\n      const remainingTime = getRemainingTime(endTime);\n      const seconds = pad(remainingTime / 1000 % 60);\n      const minutes = pad(remainingTime / (60 * 1000) % 60);\n      setSeconds(seconds);\n      setminutes(minutes); // ensure clock only updates if a second or more is remaining\n\n      if (remainingTime >= 1000) {\n        requestAnimationFrame(showTime);\n      }\n    } // kick it all off\n\n\n    requestAnimationFrame(showTime);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Countdown Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTimer,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"clockdiv\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isClicked ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `${minutes}:${seconds}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"rYbzgULp3qrIKPzavpbUqZZM6vg=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Timer/Timer.js"],"names":["React","useState","Timer","seconds","setSeconds","minutes","setminutes","isClicked","setIsClicked","startTimer","endTime","Date","getTime","getRemainingTime","deadline","currentTime","pad","value","Math","floor","slice","showTime","remainingTime","requestAnimationFrame"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,EAAtC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AACA,WAASQ,UAAT,GAAsB;AACpB;AACAD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAME,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,MAAM,IAA7C,CAHoB,CAKpB;;AACA,aAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,YAAMC,WAAW,GAAG,IAAIJ,IAAJ,GAAWC,OAAX,EAApB;AACA,aAAOE,QAAQ,GAAGC,WAAlB;AACD,KATmB,CAWpB;;;AACA,aAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,aAAO,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAP,EAA0BG,KAA1B,CAAgC,CAAC,CAAjC,CAAP;AACD,KAdmB,CAgBpB;;;AACA,aAASC,QAAT,GAAoB;AAClB,YAAMC,aAAa,GAAGT,gBAAgB,CAACH,OAAD,CAAtC;AAEA,YAAMP,OAAO,GAAGa,GAAG,CAAEM,aAAa,GAAG,IAAjB,GAAyB,EAA1B,CAAnB;AAEA,YAAMjB,OAAO,GAAGW,GAAG,CAAEM,aAAa,IAAI,KAAK,IAAT,CAAd,GAAgC,EAAjC,CAAnB;AAEAlB,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,MAAAA,UAAU,CAACD,OAAD,CAAV,CARkB,CAUlB;;AACA,UAAIiB,aAAa,IAAI,IAArB,EAA2B;AACzBC,QAAAA,qBAAqB,CAACF,QAAD,CAArB;AACD;AACF,KA/BmB,CAiCpB;;;AACAE,IAAAA,qBAAqB,CAACF,QAAD,CAArB;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEZ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,6BACE;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,EAMG,CAACF,SAAD,gBAAa;AAAA;AAAA;AAAA;AAAA,YAAb,gBAA2B;AAAA,gBAAO,GAAEF,OAAQ,IAAGF,OAAQ;AAA5B;AAAA;AAAA;AAAA;AAAA,YAN9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnDuBD,K;;KAAAA,K","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Timer() {\n  const [seconds, setSeconds] = useState();\n  const [minutes, setminutes] = useState();\n  const [isClicked, setIsClicked] = useState(false);\n  function startTimer() {\n    // set our end time\n    setIsClicked(true);\n    const endTime = new Date().getTime() + 301 * 1000;\n\n    // calculate remaining time from now until deadline\n    function getRemainingTime(deadline) {\n      const currentTime = new Date().getTime();\n      return deadline - currentTime;\n    }\n\n    // pad value with zero\n    function pad(value) {\n      return (\"0\" + Math.floor(value)).slice(-2);\n    }\n\n    // show time repeatedly\n    function showTime() {\n      const remainingTime = getRemainingTime(endTime);\n\n      const seconds = pad((remainingTime / 1000) % 60);\n\n      const minutes = pad((remainingTime / (60 * 1000)) % 60);\n\n      setSeconds(seconds);\n      setminutes(minutes);\n\n      // ensure clock only updates if a second or more is remaining\n      if (remainingTime >= 1000) {\n        requestAnimationFrame(showTime);\n      }\n    }\n\n    // kick it all off\n    requestAnimationFrame(showTime);\n  }\n\n  return (\n    <div>\n      <h1>Countdown Clock</h1>\n      <button onClick={startTimer}>Start</button>\n      <div id='clockdiv'>\n        <span id='clock'></span>\n      </div>\n      {!isClicked ? <div></div> : <div>{`${minutes}:${seconds}`}</div>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}