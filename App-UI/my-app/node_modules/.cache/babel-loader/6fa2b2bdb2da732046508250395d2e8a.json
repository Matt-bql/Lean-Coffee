{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../Styles/Body.scss\";\nimport TileContent from \"./TileContent.js\";\nimport Timer from \"./Timer/Timer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Body() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([{\n    id: 1,\n    topicTitle: \"talk about react\",\n    user: \"Steve\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isTimerClicked, setIsTimerClicked] = useState(false); //Functions\n\n  function getTopics() {\n    try {\n      fetch(\"http://localhost:8000/api/topics\").then(res => res.json()).then(res => {\n        setTopics(res.topicTitle);\n      });\n    } catch (err) {\n      console.log(\"frontend did not fetch topics\", err);\n    }\n  }\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  function inputTopicHandler(e) {\n    setInput(e.target.value);\n    console.log(\"inputTopicHandler is sending input to state: \", input);\n  }\n\n  function submitTopicHandler() {\n    const newArr = [{\n      id: Date.now(),\n      topicTitle: input\n    }, ...topics];\n    setTopics(newArr);\n    setInput(\"\");\n    console.log(\"pressed submitTopicHandler\");\n  }\n\n  function openTimer() {\n    setIsTimerClicked(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Body-Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Body-Wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Title-Text-Wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Add-Topics-Header\",\n          children: \"Add Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Input-and-Button\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            value: input,\n            onInput: inputTopicHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            onClick: submitTopicHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content-Wrapper\",\n        children: topics.map(topic => {\n          return /*#__PURE__*/_jsxDEV(TileContent, {\n            topic: topic\n          }, topic.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), !isTimerClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: openTimer,\n        children: \"CLICK HERE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Body, \"zLlAbwIcCHZwJCfXGMF8mhXuvLQ=\");\n\n_c = Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Body.js"],"names":["React","useState","useEffect","TileContent","Timer","Body","topics","setTopics","id","topicTitle","user","input","setInput","isTimerClicked","setIsTimerClicked","getTopics","fetch","then","res","json","err","console","log","inputTopicHandler","e","target","value","submitTopicHandler","newArr","Date","now","openTimer","map","topic"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../Styles/Body.scss\";\nimport TileContent from \"./TileContent.js\";\nimport Timer from \"./Timer/Timer.js\";\n\nexport default function Body() {\n  // State\n  const [topics, setTopics] = useState([\n    { id: 1, topicTitle: \"talk about react\", user: \"Steve\" },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [isTimerClicked, setIsTimerClicked] = useState(false);\n\n  //Functions\n  function getTopics() {\n    try {\n      fetch(\"http://localhost:8000/api/topics\")\n        .then(res => res.json())\n        .then(res => {\n          setTopics(res.topicTitle);\n        });\n    } catch (err) {\n      console.log(\"frontend did not fetch topics\", err);\n    }\n  }\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  function inputTopicHandler(e) {\n    setInput(e.target.value);\n    console.log(\"inputTopicHandler is sending input to state: \", input);\n  }\n  function submitTopicHandler() {\n    const newArr = [{ id: Date.now(), topicTitle: input }, ...topics];\n    setTopics(newArr);\n\n    setInput(\"\");\n\n    console.log(\"pressed submitTopicHandler\");\n  }\n  function openTimer() {\n    setIsTimerClicked(true);\n  }\n  return (\n    <div className='Body-Container'>\n      <div className='Body-Wrapper'>\n        <div className='Title-Text-Wrapper'>\n          <h1 className='Add-Topics-Header'>Add Topics</h1>\n          <div className='Input-and-Button'>\n            <input\n              className='input'\n              value={input}\n              onInput={inputTopicHandler}\n            ></input>\n            <button className='submit-button' onClick={submitTopicHandler}>\n              Submit\n            </button>\n          </div>\n        </div>\n\n        <div className='Content-Wrapper'>\n          {topics.map(topic => {\n            return <TileContent key={topic.id} topic={topic} />;\n          })}\n          {/* Conditionals based on whether or not a button/input was clicked/used. */}\n          {/* {!isButtonClicked ? (\n            <button onClick={openTopicSubmitHandler}>+</button>\n          ) : (\n            <div>\n              <input value={input} onInput={inputTopicHandler}></input>\n              <button onClick={submitTopicHandler}>Submit</button>\n            </div>\n          )} */}\n        </div>\n        {!isTimerClicked ? (\n          <div onClick={openTimer}>CLICK HERE</div>\n        ) : (\n          <Timer />\n        )}\n      </div>\n      <div>\n        <p></p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}