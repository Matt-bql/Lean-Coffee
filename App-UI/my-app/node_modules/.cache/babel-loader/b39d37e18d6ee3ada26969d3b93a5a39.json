{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/ContentBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContentBody({\n  topic,\n  getTopics,\n  id,\n  isLoading\n}) {\n  _s();\n\n  // State\n  const [inputChange, setInputChange] = useState(\"\");\n  const [isTopicClicked, setIsTopicClicked] = useState(false); //Functions\n\n  function deleteTopic() {\n    try {\n      axios.delete(`http://localhost:8000/api/${topic.id}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  console.log(isLoading);\n\n  function inputChangeHandler(e) {\n    setInputChange(e.target.value);\n  }\n\n  async function submitTopicTitleChange() {\n    if (inputChange === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      try {\n        const updatedTopic = {\n          topicTitle: inputChange\n        };\n        const info = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(updatedTopic)\n        };\n        await fetch(`http://localhost:8000/api/topic/${id}`, info);\n      } catch (err) {\n        console.log(err);\n      }\n\n      changeTopicClickedToFalse();\n    }\n\n    getTopics();\n  }\n\n  function changeTopicClickedToFalse() {\n    setIsTopicClicked(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isTopicClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card-Topics-Wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Card-Topics\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Card-Title\",\n          onClick: () => {\n            setIsTopicClicked(true);\n          },\n          children: topic.topicTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Bottom-Card-Portion\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Bottom-Card-Portion-Text2\",\n          onClick: deleteTopic,\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTopicTitleChange,\n        children: \"Submit Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContentBody, \"5NZuiE7vhi36pDF7z2zMA75cRf4=\");\n\n_c = ContentBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentBody\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/ContentBody.js"],"names":["React","useState","useEffect","axios","ContentBody","topic","getTopics","id","isLoading","inputChange","setInputChange","isTopicClicked","setIsTopicClicked","deleteTopic","delete","err","console","log","inputChangeHandler","e","target","value","submitTopicTitleChange","alert","updatedTopic","topicTitle","info","method","headers","body","JSON","stringify","fetch","changeTopicClickedToFalse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA,EAApB;AAAwBC,EAAAA;AAAxB,CAArB,EAA0D;AAAA;;AACvE;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD,CAHuE,CAKvE;;AACA,WAASY,WAAT,GAAuB;AACrB,QAAI;AACFV,MAAAA,KAAK,CAACW,MAAN,CAAc,6BAA4BT,KAAK,CAACE,EAAG,EAAnD;AACD,KAFD,CAEE,OAAOQ,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;;AACA,WAASU,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7BT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;;AAED,iBAAeC,sBAAf,GAAwC;AACtC,QAAIb,WAAW,KAAK,EAApB,EAAwB;AACtBc,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,KAFD,MAEO;AACL,UAAI;AACF,cAAMC,YAAY,GAAG;AAAEC,UAAAA,UAAU,EAAEhB;AAAd,SAArB;AACA,cAAMiB,IAAI,GAAG;AACXC,UAAAA,MAAM,EAAE,MADG;AAEXC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WAFE;AAKXC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,YAAf;AALK,SAAb;AAOA,cAAMQ,KAAK,CAAE,mCAAkCzB,EAAG,EAAvC,EAA0CmB,IAA1C,CAAX;AACD,OAVD,CAUE,OAAOX,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AACDkB,MAAAA,yBAAyB;AAC1B;;AACD3B,IAAAA,SAAS;AACV;;AAED,WAAS2B,yBAAT,GAAqC;AACnCrB,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAED,sBACE;AAAA,cACG,CAACD,cAAD,gBACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbC,YAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,WAJH;AAAA,oBAMGP,KAAK,CAACoB;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BAGE;AAAK,UAAA,SAAS,EAAC,2BAAf;AAA2C,UAAA,OAAO,EAAEZ,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAqBC;AAAA,8BAEE;AAAO,QAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEI,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBJ,KAAUf,EAAV;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA3EuBH,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nexport default function ContentBody({ topic, getTopics, id, isLoading }) {\n  // State\n  const [inputChange, setInputChange] = useState(\"\");\n  const [isTopicClicked, setIsTopicClicked] = useState(false);\n\n  //Functions\n  function deleteTopic() {\n    try {\n      axios.delete(`http://localhost:8000/api/${topic.id}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  console.log(isLoading);\n  function inputChangeHandler(e) {\n    setInputChange(e.target.value);\n  }\n\n  async function submitTopicTitleChange() {\n    if (inputChange === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      try {\n        const updatedTopic = { topicTitle: inputChange };\n        const info = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(updatedTopic),\n        };\n        await fetch(`http://localhost:8000/api/topic/${id}`, info);\n      } catch (err) {\n        console.log(err);\n      }\n      changeTopicClickedToFalse();\n    }\n    getTopics();\n  }\n\n  function changeTopicClickedToFalse() {\n    setIsTopicClicked(false);\n  }\n\n  return (\n    <div key={id}>\n      {!isTopicClicked ? (\n        <div className='Card-Topics-Wrapper'>\n          <div className='Card-Topics'>\n            <p\n              className='Card-Title'\n              onClick={() => {\n                setIsTopicClicked(true);\n              }}\n            >\n              {topic.topicTitle}\n            </p>\n          </div>\n          <div className='Bottom-Card-Portion'>\n            {/* This is where the voting element will live...\n            <div className='Bottom-Card-Portion-Text'>vote</div>*/}\n            <div className='Bottom-Card-Portion-Text2' onClick={deleteTopic}>\n              delete\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          {/*  */}\n          <input onInput={inputChangeHandler}></input>\n          <button onClick={submitTopicTitleChange}>Submit Change</button>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}