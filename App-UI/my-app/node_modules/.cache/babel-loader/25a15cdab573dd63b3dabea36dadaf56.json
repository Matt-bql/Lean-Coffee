{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    getTopics();\n  }, []); // Functions\n  // Fetching data\n\n  async function getTopics() {\n    setIsLoading(true);\n\n    try {\n      await axios.get(\"http://localhost:8000/api/topics\").then(response => response.data).then(res => setTopics(res.Items));\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    } finally {\n      setIsLoading(false);\n    }\n  } // Grabs input data to eventually use when 'add topic' button is clicked.\n\n\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  } // make post -- gives me response. I update ui using react\n  // this function makes use of optimistic ui concepts..\n\n\n  async function createTopic() {\n    if (topicInput === \"\") {\n      alert(\"Topic cannot be empty.\");\n    } else {\n      try {\n        setIsLoading(true);\n        const newTopic = {\n          id: uuidv4().toString(),\n          topicTitle: topicInput\n        };\n        setTopicInput(\"\");\n        await axios.post(\"http://localhost:8000/api\", newTopic).then(res => {\n          setIsLoading(false);\n          return res;\n        }).then(res => {\n          // make sure update happened. Only update the ui if the\n          // DB has been updated. if not, show error.\n          console.log(\"foobar\", res);\n          const updatedTopics = [...topics, newTopic];\n          setTopics(updatedTopics);\n        }); // .then(getTopics());\n      } catch (err) {\n        console.log(\"error with 'createTopic()': \", err);\n      }\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // Using React-Router for Home/Session Pages\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: \"Header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-Body\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(TopicContext.Provider, {\n              value: {\n                topics,\n                isLoading,\n                getTopics,\n                setIsLoading,\n                setTopics\n              },\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(ContentBodyParent, {\n                    className: \"Topic-Child-Container\",\n                    createTopic: createTopic,\n                    input: topicInput,\n                    topicInputHandler: topicInputHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/discussion\",\n                children: /*#__PURE__*/_jsxDEV(DiscussionSession, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n\n_s(App, \"021OYpoSI43faB3sS2H0MnWWedg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","v4","uuidv4","axios","Header","ContentBodyParent","DiscussionSession","TopicContext","App","topics","setTopics","topicInput","setTopicInput","isLoading","setIsLoading","getTopics","get","then","response","data","res","Items","err","console","log","topicInputHandler","e","target","value","createTopic","alert","newTopic","id","toString","topicTitle","post","updatedTopics"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SAASC,YAAT,QAA6B,oCAA7B;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT,CAN4B,CAU5B;AACA;;AACA,iBAAeA,SAAf,GAA2B;AACzBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMX,KAAK,CACRa,GADG,CACC,kCADD,EAEHC,IAFG,CAEEC,QAAQ,IAAIA,QAAQ,CAACC,IAFvB,EAGHF,IAHG,CAGEG,GAAG,IAAIV,SAAS,CAACU,GAAG,CAACC,KAAL,CAHlB,CAAN;AAID,KALD,CAKE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,GAAtC;AACD,KAPD,SAOU;AACRR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAxB2B,CA0B5B;;;AACA,WAASW,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5Bd,IAAAA,aAAa,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GA7B2B,CA8B5B;AACA;;;AACA,iBAAeC,WAAf,GAA6B;AAC3B,QAAIlB,UAAU,KAAK,EAAnB,EAAuB;AACrBmB,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAFD,MAEO;AACL,UAAI;AACFhB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMiB,QAAQ,GAAG;AACfC,UAAAA,EAAE,EAAE9B,MAAM,GAAG+B,QAAT,EADW;AAEfC,UAAAA,UAAU,EAAEvB;AAFG,SAAjB;AAIAC,QAAAA,aAAa,CAAC,EAAD,CAAb;AACA,cAAMT,KAAK,CACRgC,IADG,CACE,2BADF,EAC+BJ,QAD/B,EAEHd,IAFG,CAEEG,GAAG,IAAI;AACXN,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,iBAAOM,GAAP;AACD,SALG,EAMHH,IANG,CAMEG,GAAG,IAAI;AACX;AACA;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,GAAtB;AACA,gBAAMgB,aAAa,GAAG,CAAC,GAAG3B,MAAJ,EAAYsB,QAAZ,CAAtB;AACArB,UAAAA,SAAS,CAAC0B,aAAD,CAAT;AACD,SAZG,CAAN,CAPE,CAoBF;AACD,OArBD,CAqBE,OAAOd,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAA5C;AACD;AACF;AACF;;AAED;AAAA;AACE;AACA;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,YAAD,CAAc,QAAd;AACE,cAAA,KAAK,EAAE;AACLb,gBAAAA,MADK;AAELI,gBAAAA,SAFK;AAGLE,gBAAAA,SAHK;AAILD,gBAAAA,YAJK;AAKLJ,gBAAAA;AALK,eADT;AAAA,sCASE,QAAC,KAAD;AAAO,gBAAA,KAAK,MAAZ;AAAa,gBAAA,IAAI,EAAC,GAAlB;AAAA,uCACE;AAAA,yCACE,QAAC,iBAAD;AACE,oBAAA,SAAS,EAAC,uBADZ;AAEE,oBAAA,WAAW,EAAEmB,WAFf;AAGE,oBAAA,KAAK,EAAElB,UAHT;AAIE,oBAAA,iBAAiB,EAAEc;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBATF,eAmBE,QAAC,KAAD;AAAO,gBAAA,KAAK,MAAZ;AAAa,gBAAA,IAAI,EAAC,aAAlB;AAAA,uCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAFF;AAmCD;;GAlGuBjB,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  // Functions\n  // Fetching data\n  async function getTopics() {\n    setIsLoading(true);\n    try {\n      await axios\n        .get(\"http://localhost:8000/api/topics\")\n        .then(response => response.data)\n        .then(res => setTopics(res.Items));\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  // Grabs input data to eventually use when 'add topic' button is clicked.\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  }\n  // make post -- gives me response. I update ui using react\n  // this function makes use of optimistic ui concepts..\n  async function createTopic() {\n    if (topicInput === \"\") {\n      alert(\"Topic cannot be empty.\");\n    } else {\n      try {\n        setIsLoading(true);\n        const newTopic = {\n          id: uuidv4().toString(),\n          topicTitle: topicInput,\n        };\n        setTopicInput(\"\");\n        await axios\n          .post(\"http://localhost:8000/api\", newTopic)\n          .then(res => {\n            setIsLoading(false);\n            return res;\n          })\n          .then(res => {\n            // make sure update happened. Only update the ui if the\n            // DB has been updated. if not, show error.\n            console.log(\"foobar\", res);\n            const updatedTopics = [...topics, newTopic];\n            setTopics(updatedTopics);\n          });\n        // .then(getTopics());\n      } catch (err) {\n        console.log(\"error with 'createTopic()': \", err);\n      }\n    }\n  }\n\n  return (\n    // Using React-Router for Home/Session Pages\n    <>\n      <Router>\n        <Header className='Header' />\n        <div className='App-Body'>\n          <Switch>\n            <TopicContext.Provider\n              value={{\n                topics,\n                isLoading,\n                getTopics,\n                setIsLoading,\n                setTopics,\n              }}\n            >\n              <Route exact path='/'>\n                <div>\n                  <ContentBodyParent\n                    className='Topic-Child-Container'\n                    createTopic={createTopic}\n                    input={topicInput}\n                    topicInputHandler={topicInputHandler}\n                  />\n                </div>\n              </Route>\n              <Route exact path='/discussion'>\n                <DiscussionSession />\n              </Route>\n            </TopicContext.Provider>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}