{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [blocked, setBlocked] = useState(false);\n  useEffect(() => {\n    getTopics();\n  }, []); // Functions\n\n  async function getTopics() {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/topics\");\n      const topics = response.data;\n      setTopics(topics.Items);\n      setIsLoading(true);\n      setBlocked(false);\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    }\n  } // Grabs input data to eventually use when 'add topic' button is clicked.\n\n\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  }\n\n  function createTopic() {\n    try {\n      const newTopic = {\n        id: uuidv4().toString(),\n        topicTitle: topicInput\n      };\n      axios.post(\"http://localhost:8000/api\", newTopic).then(getTopics());\n    } catch (err) {\n      console.log(\"error with 'create topic': \", err);\n    }\n\n    getTopics();\n    setTopicInput(\"\");\n  }\n\n  return (\n    /*#__PURE__*/\n    // Using React-Router for Home/Session Pages\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: \"Header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-Body\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: /*#__PURE__*/_jsxDEV(TopicContext.Provider, {\n              value: {\n                topics,\n                isLoading,\n                getTopics\n              },\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(ContentBodyParent, {\n                    className: \"Topic-Child-Container\",\n                    createTopic: createTopic,\n                    input: topicInput,\n                    topicInputHandler: topicInputHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/discussion\",\n                children: /*#__PURE__*/_jsxDEV(DiscussionSession, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"bB7YgWcm2SeoM6M3hlKpth5mpq4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","v4","uuidv4","axios","Header","ContentBodyParent","DiscussionSession","TopicContext","App","topics","setTopics","topicInput","setTopicInput","isLoading","setIsLoading","blocked","setBlocked","getTopics","response","get","data","Items","err","console","log","topicInputHandler","e","target","value","createTopic","newTopic","id","toString","topicTitle","post","then"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport \"./Styles/App.scss\";\nimport \"./Styles/Reset.css\";\nimport \"./Styles/Header.scss\";\nimport \"./Styles/ContentBody.scss\";\nimport Header from \"./components/Header.js\";\nimport ContentBodyParent from \"./components/ContentBodyParent.js\";\nimport DiscussionSession from \"./components/DiscussionSession.js\";\nimport { TopicContext } from \"./components/Contexts/TopicContext\";\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [topicInput, setTopicInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [blocked, setBlocked] = useState(false);\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  // Functions\n  async function getTopics() {\n    try {\n      const response = await axios.get(\"http://localhost:8000/api/topics\");\n      const topics = response.data;\n      setTopics(topics.Items);\n      setIsLoading(true);\n      setBlocked(false);\n    } catch (err) {\n      console.log(\"Did not fetch topics: \", err);\n    }\n  }\n\n  // Grabs input data to eventually use when 'add topic' button is clicked.\n  function topicInputHandler(e) {\n    setTopicInput(e.target.value);\n  }\n\n  function createTopic() {\n    try {\n      const newTopic = {\n        id: uuidv4().toString(),\n        topicTitle: topicInput,\n      };\n      axios.post(\"http://localhost:8000/api\", newTopic).then(getTopics());\n    } catch (err) {\n      console.log(\"error with 'create topic': \", err);\n    }\n\n    getTopics();\n    setTopicInput(\"\");\n  }\n\n  return (\n    // Using React-Router for Home/Session Pages\n\n    <div className='App'>\n      <Router>\n        <Header className='Header' />\n        <div className='App-Body'>\n          <Switch>\n            <TopicContext.Provider value={{ topics, isLoading, getTopics }}>\n              <Route exact path='/'>\n                <div>\n                  <ContentBodyParent\n                    className='Topic-Child-Container'\n                    createTopic={createTopic}\n                    input={topicInput}\n                    topicInputHandler={topicInputHandler}\n                  />\n                </div>\n              </Route>\n              <Route exact path='/discussion'>\n                <DiscussionSession />\n              </Route>\n            </TopicContext.Provider>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}