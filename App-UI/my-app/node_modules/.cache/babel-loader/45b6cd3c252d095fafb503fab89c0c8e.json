{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Styles/App.scss\";\nimport LeftSidebar from \"./components/LeftSidebar.js\";\nimport RightSidebar from \"./components/RightSidebar.js\";\nimport Body from \"./components/Body.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [updatedTopicInput, setUpdatedTopicInput] = useState(\"\");\n  const [isEditButtonClicked, setIsEditButtonClicked] = useState(false); //Functions\n  //Fetching data to show use the topic titles.\n\n  function getTopics() {\n    try {\n      fetch(\"http://localhost:8000/api/topics\").then(res => res.json()).then(res => {\n        setTopics(res.Items);\n      });\n    } catch (err) {\n      console.log(\"frontend did not fetch topics\", err);\n    }\n  }\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  function changedTopicTitle(e) {\n    setUpdatedTopicInput(e.target.value);\n  }\n\n  function editButtonClickedIsTrue() {\n    setIsEditButtonClicked(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSidebar, {\n      className: \"App-Left-Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      className: \"App-Body\",\n      topics: topics,\n      getTopics: getTopics,\n      input: input,\n      setInput: setInput,\n      changedTopicTitle: changedTopicTitle,\n      submitTopicTitleChange: submitTopicTitleChange,\n      updatedTopicInput: updatedTopicInput,\n      setUpdatedTopicInput: setUpdatedTopicInput,\n      setIsEditButtonClicked: setIsEditButtonClicked,\n      isEditButtonClicked: isEditButtonClicked,\n      editButtonClickedIsTrue: editButtonClickedIsTrue\n    }, topics.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightSidebar, {\n      className: \"App-Right-Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K9oYs4Qj7jSc5p+9lRNvA5ypt7Q=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js"],"names":["React","useEffect","useState","LeftSidebar","RightSidebar","Body","App","topics","setTopics","input","setInput","updatedTopicInput","setUpdatedTopicInput","isEditButtonClicked","setIsEditButtonClicked","getTopics","fetch","then","res","json","Items","err","console","log","changedTopicTitle","e","target","value","editButtonClickedIsTrue","submitTopicTitleChange","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACW,mBAAD,EAAsBC,sBAAtB,IAAgDZ,QAAQ,CAAC,KAAD,CAA9D,CAL4B,CAM5B;AAEA;;AAEA,WAASa,SAAT,GAAqB;AACnB,QAAI;AACFC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXV,QAAAA,SAAS,CAACU,GAAG,CAACE,KAAL,CAAT;AACD,OAJH;AAKD,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAA7C;AACD;AACF;;AACDpB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASS,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5Bb,IAAAA,oBAAoB,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB;AACD;;AAED,WAASC,uBAAT,GAAmC;AACjCd,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAEE,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,MAAM,EAAEP,MAHV;AAIE,MAAA,SAAS,EAAEQ,SAJb;AAKE,MAAA,KAAK,EAAEN,KALT;AAME,MAAA,QAAQ,EAAEC,QANZ;AAOE,MAAA,iBAAiB,EAAEc,iBAPrB;AAQE,MAAA,sBAAsB,EAAEK,sBAR1B;AASE,MAAA,iBAAiB,EAAElB,iBATrB;AAUE,MAAA,oBAAoB,EAAEC,oBAVxB;AAWE,MAAA,sBAAsB,EAAEE,sBAX1B;AAYE,MAAA,mBAAmB,EAAED,mBAZvB;AAaE,MAAA,uBAAuB,EAAEe;AAb3B,OACOrB,MAAM,CAACuB,EADd;AAAA;AAAA;AAAA;AAAA,YAFF,eAiBE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GArDuBxB,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Styles/App.scss\";\nimport LeftSidebar from \"./components/LeftSidebar.js\";\nimport RightSidebar from \"./components/RightSidebar.js\";\nimport Body from \"./components/Body.js\";\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [updatedTopicInput, setUpdatedTopicInput] = useState(\"\");\n  const [isEditButtonClicked, setIsEditButtonClicked] = useState(false);\n  //Functions\n\n  //Fetching data to show use the topic titles.\n\n  function getTopics() {\n    try {\n      fetch(\"http://localhost:8000/api/topics\")\n        .then(res => res.json())\n        .then(res => {\n          setTopics(res.Items);\n        });\n    } catch (err) {\n      console.log(\"frontend did not fetch topics\", err);\n    }\n  }\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  function changedTopicTitle(e) {\n    setUpdatedTopicInput(e.target.value);\n  }\n\n  function editButtonClickedIsTrue() {\n    setIsEditButtonClicked(true);\n  }\n  return (\n    <div className='App'>\n      <LeftSidebar className='App-Left-Sidebar' />\n      <Body\n        key={topics.id}\n        className='App-Body'\n        topics={topics}\n        getTopics={getTopics}\n        input={input}\n        setInput={setInput}\n        changedTopicTitle={changedTopicTitle}\n        submitTopicTitleChange={submitTopicTitleChange}\n        updatedTopicInput={updatedTopicInput}\n        setUpdatedTopicInput={setUpdatedTopicInput}\n        setIsEditButtonClicked={setIsEditButtonClicked}\n        isEditButtonClicked={isEditButtonClicked}\n        editButtonClickedIsTrue={editButtonClickedIsTrue}\n      />\n      <RightSidebar className='App-Right-Sidebar' />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}