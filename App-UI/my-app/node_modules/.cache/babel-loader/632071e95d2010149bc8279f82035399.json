{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Styles/App.scss\";\nimport LeftSidebar from \"./components/LeftSidebar.js\";\nimport RightSidebar from \"./components/RightSidebar.js\";\nimport Body from \"./components/Body.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [updatedTopicInput, setUpdatedTopicInput] = useState(\"\"); //Functions\n  //Fetching data to show use the topic titles.\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  function getTopics() {\n    try {\n      fetch(\"http://localhost:8000/api/topics\").then(res => res.json()).then(res => {\n        setTopics(res.Items);\n      });\n    } catch (err) {\n      console.log(\"frontend did not fetch topics\", err);\n    }\n  } // Creating topic being sent to the database.\n\n\n  async function createTopicHandler() {\n    const newTopic = {\n      id: Date.now().toString(),\n      topicTitle: input\n    };\n\n    if (input === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      const info = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTopic)\n      };\n      await fetch(\"http://localhost:8000/api\", info);\n    }\n\n    getTopics();\n  }\n\n  function changedTopicTitle(e) {\n    setUpdatedTopicInput(e.target.value);\n  }\n\n  async function submitTopicTitleChange() {\n    try {\n      const updatedTopicTitle = {\n        topicTitle: updatedTopicInput\n      };\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(LeftSidebar, {\n      className: \"App-Left-Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      className: \"App-Body\",\n      topics: topics,\n      input: input,\n      setInput: setInput,\n      createTopicHandler: createTopicHandler,\n      changedTopicTitle: changedTopicTitle,\n      submitTopicTitleChange: submitTopicTitleChange,\n      updatedTopicInput: updatedTopicInput,\n      setUpdatedTopicInput: setUpdatedTopicInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightSidebar, {\n      className: \"App-Right-Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"I/ZVP3g3craqBYSdEpMdRUNFyaY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/App.js"],"names":["React","useEffect","useState","LeftSidebar","RightSidebar","Body","App","topics","setTopics","input","setInput","updatedTopicInput","setUpdatedTopicInput","getTopics","fetch","then","res","json","Items","err","console","log","createTopicHandler","newTopic","id","Date","now","toString","topicTitle","alert","info","method","headers","body","JSON","stringify","changedTopicTitle","e","target","value","submitTopicTitleChange","updatedTopicTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Styles/App.scss\";\nimport LeftSidebar from \"./components/LeftSidebar.js\";\nimport RightSidebar from \"./components/RightSidebar.js\";\nimport Body from \"./components/Body.js\";\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [updatedTopicInput, setUpdatedTopicInput] = useState(\"\");\n  //Functions\n\n  //Fetching data to show use the topic titles.\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  function getTopics() {\n    try {\n      fetch(\"http://localhost:8000/api/topics\")\n        .then(res => res.json())\n        .then(res => {\n          setTopics(res.Items);\n        });\n    } catch (err) {\n      console.log(\"frontend did not fetch topics\", err);\n    }\n  }\n\n  // Creating topic being sent to the database.\n  async function createTopicHandler() {\n    const newTopic = {\n      id: Date.now().toString(),\n      topicTitle: input,\n    };\n    if (input === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      const info = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newTopic),\n      };\n      await fetch(\"http://localhost:8000/api\", info);\n    }\n    getTopics();\n  }\n  function changedTopicTitle(e) {\n    setUpdatedTopicInput(e.target.value);\n  }\n  async function submitTopicTitleChange() {\n    try {\n      const updatedTopicTitle = { topicTitle: updatedTopicInput };\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className='App'>\n      <LeftSidebar className='App-Left-Sidebar' />\n      <Body\n        className='App-Body'\n        topics={topics}\n        input={input}\n        setInput={setInput}\n        createTopicHandler={createTopicHandler}\n        changedTopicTitle={changedTopicTitle}\n        submitTopicTitleChange={submitTopicTitleChange}\n        updatedTopicInput={updatedTopicInput}\n        setUpdatedTopicInput={setUpdatedTopicInput}\n      />\n      <RightSidebar className='App-Right-Sidebar' />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}