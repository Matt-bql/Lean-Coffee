{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Tiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tiles({\n  topic,\n  isSubmitTopicClicked\n}) {\n  _s();\n\n  // State\n  const [isButtonClicked, setIsButtonClicked] = useState(false); // Functions\n\n  function openTopicSubmitHandler() {\n    setIsButtonClicked(true);\n    console.log(\"Open Topic Handler Working\");\n  }\n\n  function inputTopicHandler(e) {\n    setinput(e.target.value);\n    console.log(\"inputTopicHandler is sending input to state: \", input);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isSubmitTopicClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: topic.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: t.topicTitle\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), isButtonClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onInput: inputTopicHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitTopicHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openTopicSubmitHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tiles, \"f0Nu5rk0A/r9rORVwz2zwnvOlr8=\");\n\n_c = Tiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tiles\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Tiles.js"],"names":["React","useState","Tiles","topic","isSubmitTopicClicked","isButtonClicked","setIsButtonClicked","openTopicSubmitHandler","console","log","inputTopicHandler","e","setinput","target","value","input","map","t","topicTitle","id","submitTopicHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAgD;AAAA;;AAC7D;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,KAAD,CAAtD,CAF6D,CAI7D;;AACA,WAASM,sBAAT,GAAkC;AAChCD,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AACD,WAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BC,IAAAA,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DM,KAA7D;AACD;;AAED,sBACE;AAAA,eACGX,oBAAoB,iBACnB;AAAA,gBACGD,KAAK,CAACa,GAAN,CAAUC,CAAC,iBACV;AAAA,kBAAiBA,CAAC,CAACC;AAAnB,SAAUD,CAAC,CAACE,EAAZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ,EASGd,eAAe,gBACd;AAAA,8BACE;AAAO,QAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEU,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADc,gBAMd;AAAQ,MAAA,OAAO,EAAEb,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlCuBL,K;;KAAAA,K","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Tiles({ topic, isSubmitTopicClicked }) {\n  // State\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\n\n  // Functions\n  function openTopicSubmitHandler() {\n    setIsButtonClicked(true);\n    console.log(\"Open Topic Handler Working\");\n  }\n  function inputTopicHandler(e) {\n    setinput(e.target.value);\n    console.log(\"inputTopicHandler is sending input to state: \", input);\n  }\n\n  return (\n    <div>\n      {isSubmitTopicClicked && (\n        <div>\n          {topic.map(t => (\n            <div key={t.id}>{t.topicTitle}</div>\n          ))}\n        </div>\n      )}\n\n      {isButtonClicked ? (\n        <div>\n          <input onInput={inputTopicHandler}></input>\n          <button onClick={submitTopicHandler}>Submit</button>\n        </div>\n      ) : (\n        <button onClick={openTopicSubmitHandler}>+</button>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}