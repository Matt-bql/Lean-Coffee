{"ast":null,"code":"// 10 minutes from now\nvar time_in_minutes = 10;\nvar current_time = Date.parse(new Date());\nvar deadline = new Date(current_time + time_in_minutes * 60 * 1000);\n\nfunction time_remaining(endtime) {\n  var t = Date.parse(endtime) - Date.parse(new Date());\n  var seconds = Math.floor(t / 1000 % 60);\n  var minutes = Math.floor(t / 1000 / 60 % 60);\n  var hours = Math.floor(t / (1000 * 60 * 60) % 24);\n  var days = Math.floor(t / (1000 * 60 * 60 * 24));\n  return {\n    total: t,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n}\n\nvar timeinterval;\n\nfunction run_clock(id, endtime) {\n  var clock = document.getElementById(id);\n\n  function update_clock() {\n    var t = time_remaining(endtime);\n    clock.innerHTML = \"minutes: \" + t.minutes + \"<br>seconds: \" + t.seconds;\n\n    if (t.total <= 0) {\n      clearInterval(timeinterval);\n    }\n  }\n\n  update_clock(); // run function once at first to avoid delay\n\n  timeinterval = setInterval(update_clock, 1000);\n}\n\nrun_clock(\"clockdiv\", deadline);\nvar paused = false; // is the clock paused?\n\nvar time_left; // time left on the clock when paused\n\nfunction pause_clock() {\n  if (!paused) {\n    paused = true;\n    clearInterval(timeinterval); // stop the clock\n\n    time_left = time_remaining(deadline).total; // preserve remaining time\n  }\n}\n\nfunction resume_clock() {\n  if (paused) {\n    paused = false; // update the deadline to preserve the amount of time remaining\n\n    deadline = new Date(Date.parse(new Date()) + time_left); // start the clock\n\n    run_clock(\"clockdiv\", deadline);\n  }\n} // handle pause and resume button clicks\n\n\ndocument.getElementById(\"pause\").onclick = pause_clock;\ndocument.getElementById(\"resume\").onclick = resume_clock;","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Timer/Timer.js"],"names":["time_in_minutes","current_time","Date","parse","deadline","time_remaining","endtime","t","seconds","Math","floor","minutes","hours","days","total","timeinterval","run_clock","id","clock","document","getElementById","update_clock","innerHTML","clearInterval","setInterval","paused","time_left","pause_clock","resume_clock","onclick"],"mappings":"AAAA;AACA,IAAIA,eAAe,GAAG,EAAtB;AACA,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAAnB;AACA,IAAIE,QAAQ,GAAG,IAAIF,IAAJ,CAASD,YAAY,GAAGD,eAAe,GAAG,EAAlB,GAAuB,IAA/C,CAAf;;AAEA,SAASK,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,MAAIC,CAAC,GAAGL,IAAI,CAACC,KAAL,CAAWG,OAAX,IAAsBJ,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAA9B;AACA,MAAIM,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYH,CAAC,GAAG,IAAL,GAAa,EAAxB,CAAd;AACA,MAAII,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYH,CAAC,GAAG,IAAJ,GAAW,EAAZ,GAAkB,EAA7B,CAAd;AACA,MAAIK,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAYH,CAAC,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAF,GAAyB,EAApC,CAAZ;AACA,MAAIM,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWH,CAAC,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAZ,CAAX;AACA,SAAO;AACLO,IAAAA,KAAK,EAAEP,CADF;AAELM,IAAAA,IAAI,EAAEA,IAFD;AAGLD,IAAAA,KAAK,EAAEA,KAHF;AAILD,IAAAA,OAAO,EAAEA,OAJJ;AAKLH,IAAAA,OAAO,EAAEA;AALJ,GAAP;AAOD;;AAED,IAAIO,YAAJ;;AACA,SAASC,SAAT,CAAmBC,EAAnB,EAAuBX,OAAvB,EAAgC;AAC9B,MAAIY,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAZ;;AACA,WAASI,YAAT,GAAwB;AACtB,QAAId,CAAC,GAAGF,cAAc,CAACC,OAAD,CAAtB;AACAY,IAAAA,KAAK,CAACI,SAAN,GAAkB,cAAcf,CAAC,CAACI,OAAhB,GAA0B,eAA1B,GAA4CJ,CAAC,CAACC,OAAhE;;AACA,QAAID,CAAC,CAACO,KAAF,IAAW,CAAf,EAAkB;AAChBS,MAAAA,aAAa,CAACR,YAAD,CAAb;AACD;AACF;;AACDM,EAAAA,YAAY,GATkB,CASd;;AAChBN,EAAAA,YAAY,GAAGS,WAAW,CAACH,YAAD,EAAe,IAAf,CAA1B;AACD;;AACDL,SAAS,CAAC,UAAD,EAAaZ,QAAb,CAAT;AAEA,IAAIqB,MAAM,GAAG,KAAb,C,CAAoB;;AACpB,IAAIC,SAAJ,C,CAAe;;AAEf,SAASC,WAAT,GAAuB;AACrB,MAAI,CAACF,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG,IAAT;AACAF,IAAAA,aAAa,CAACR,YAAD,CAAb,CAFW,CAEkB;;AAC7BW,IAAAA,SAAS,GAAGrB,cAAc,CAACD,QAAD,CAAd,CAAyBU,KAArC,CAHW,CAGiC;AAC7C;AACF;;AAED,SAASc,YAAT,GAAwB;AACtB,MAAIH,MAAJ,EAAY;AACVA,IAAAA,MAAM,GAAG,KAAT,CADU,CAGV;;AACArB,IAAAA,QAAQ,GAAG,IAAIF,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,IAAyBwB,SAAlC,CAAX,CAJU,CAMV;;AACAV,IAAAA,SAAS,CAAC,UAAD,EAAaZ,QAAb,CAAT;AACD;AACF,C,CAED;;;AACAe,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCS,OAAjC,GAA2CF,WAA3C;AACAR,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCS,OAAlC,GAA4CD,YAA5C","sourcesContent":["// 10 minutes from now\nvar time_in_minutes = 10;\nvar current_time = Date.parse(new Date());\nvar deadline = new Date(current_time + time_in_minutes * 60 * 1000);\n\nfunction time_remaining(endtime) {\n  var t = Date.parse(endtime) - Date.parse(new Date());\n  var seconds = Math.floor((t / 1000) % 60);\n  var minutes = Math.floor((t / 1000 / 60) % 60);\n  var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n  var days = Math.floor(t / (1000 * 60 * 60 * 24));\n  return {\n    total: t,\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n  };\n}\n\nvar timeinterval;\nfunction run_clock(id, endtime) {\n  var clock = document.getElementById(id);\n  function update_clock() {\n    var t = time_remaining(endtime);\n    clock.innerHTML = \"minutes: \" + t.minutes + \"<br>seconds: \" + t.seconds;\n    if (t.total <= 0) {\n      clearInterval(timeinterval);\n    }\n  }\n  update_clock(); // run function once at first to avoid delay\n  timeinterval = setInterval(update_clock, 1000);\n}\nrun_clock(\"clockdiv\", deadline);\n\nvar paused = false; // is the clock paused?\nvar time_left; // time left on the clock when paused\n\nfunction pause_clock() {\n  if (!paused) {\n    paused = true;\n    clearInterval(timeinterval); // stop the clock\n    time_left = time_remaining(deadline).total; // preserve remaining time\n  }\n}\n\nfunction resume_clock() {\n  if (paused) {\n    paused = false;\n\n    // update the deadline to preserve the amount of time remaining\n    deadline = new Date(Date.parse(new Date()) + time_left);\n\n    // start the clock\n    run_clock(\"clockdiv\", deadline);\n  }\n}\n\n// handle pause and resume button clicks\ndocument.getElementById(\"pause\").onclick = pause_clock;\ndocument.getElementById(\"resume\").onclick = resume_clock;\n"]},"metadata":{},"sourceType":"module"}