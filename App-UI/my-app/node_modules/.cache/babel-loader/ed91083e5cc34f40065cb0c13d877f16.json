{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TileContent from \"./TileContent.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isNameClicked, setIsNameClicked] = useState(false); //Functions\n  //Fetching data to show use the topic titles.\n\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  function getTopics() {\n    try {\n      fetch(\"http://localhost:8000/api/topics\").then(res => res.json()).then(res => {\n        setTopics(res.Items);\n      });\n    } catch (err) {\n      console.log(\"frontend did not fetch topics\", err);\n    }\n  } // Creating topic being sent to the database.\n\n\n  async function createTopicHandler() {\n    const newTopic = {\n      id: Date.now().toString(),\n      topicTitle: input\n    };\n\n    if (input === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      const info = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTopic)\n      };\n      await fetch(\"http://localhost:8000/api\", info);\n    }\n\n    getTopics();\n  } // async function submitTopicTitleChange() {\n  //   try {\n  //     const updatedTopicTitle = { topicTitle: updatedTopicInput };\n  //     const info = {\n  //       method: \"POST\",\n  //       header: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(updatedTopicTitle),\n  //     };\n  //     await fetch(`http://localhost:8000/api/topics/${topics.id}`, info);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  //   getTopics();\n  // setIsEditButtonClicked(false);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: topics.map(topic => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TileContent, {\n        id: topic.id,\n        topic: topic,\n        isNameClicked: isNameClicked,\n        setIsNameClicked: setIsNameClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, topic.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wDzy4vGQYGtIlVLlTA3moJ3E628=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Body.js"],"names":["React","useEffect","useState","TileContent","App","topics","setTopics","input","setInput","isNameClicked","setIsNameClicked","getTopics","fetch","then","res","json","Items","err","console","log","createTopicHandler","newTopic","id","Date","now","toString","topicTitle","alert","info","method","headers","body","JSON","stringify","map","topic"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD,CAJ4B,CAK5B;AAEA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,SAAT,GAAqB;AACnB,QAAI;AACFC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXR,QAAAA,SAAS,CAACQ,GAAG,CAACE,KAAL,CAAT;AACD,OAJH;AAKD,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAA7C;AACD;AACF,GAtB2B,CAwB5B;;;AACA,iBAAeG,kBAAf,GAAoC;AAClC,UAAMC,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,GAAWC,QAAX,EADW;AAEfC,MAAAA,UAAU,EAAEnB;AAFG,KAAjB;;AAIA,QAAIA,KAAK,KAAK,EAAd,EAAkB;AAChBoB,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAMC,IAAI,GAAG;AACXC,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFE;AAKXC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,QAAf;AALK,OAAb;AAOA,YAAMT,KAAK,CAAC,2BAAD,EAA8BgB,IAA9B,CAAX;AACD;;AACDjB,IAAAA,SAAS;AACV,GA3C2B,CA6C5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGN,MAAM,CAAC6B,GAAP,CAAWC,KAAK,iBACf;AAAA,6BAEI,QAAC,WAAD;AACE,QAAA,EAAE,EAAEA,KAAK,CAACb,EADZ;AAEE,QAAA,KAAK,EAAEa,KAFT;AAGE,QAAA,aAAa,EAAE1B,aAHjB;AAIE,QAAA,gBAAgB,EAAEC;AAJpB;AAAA;AAAA;AAAA;AAAA;AAFJ,OAAUyB,KAAK,CAACb,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA/EuBlB,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TileContent from \"./TileContent.js\";\n\nexport default function App() {\n  // State\n  const [topics, setTopics] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isNameClicked, setIsNameClicked] = useState(false);\n  //Functions\n\n  //Fetching data to show use the topic titles.\n  useEffect(() => {\n    getTopics();\n  }, []);\n\n  function getTopics() {\n    try {\n      fetch(\"http://localhost:8000/api/topics\")\n        .then(res => res.json())\n        .then(res => {\n          setTopics(res.Items);\n        });\n    } catch (err) {\n      console.log(\"frontend did not fetch topics\", err);\n    }\n  }\n\n  // Creating topic being sent to the database.\n  async function createTopicHandler() {\n    const newTopic = {\n      id: Date.now().toString(),\n      topicTitle: input,\n    };\n    if (input === \"\") {\n      alert(\"Field must not be empty.\");\n    } else {\n      const info = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newTopic),\n      };\n      await fetch(\"http://localhost:8000/api\", info);\n    }\n    getTopics();\n  }\n\n  // async function submitTopicTitleChange() {\n  //   try {\n  //     const updatedTopicTitle = { topicTitle: updatedTopicInput };\n  //     const info = {\n  //       method: \"POST\",\n  //       header: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(updatedTopicTitle),\n  //     };\n  //     await fetch(`http://localhost:8000/api/topics/${topics.id}`, info);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  //   getTopics();\n  // setIsEditButtonClicked(false);\n  // }\n\n  return (\n    <div className='App'>\n      {topics.map(topic => (\n        <div key={topic.id}>\n          {\n            <TileContent\n              id={topic.id}\n              topic={topic}\n              isNameClicked={isNameClicked}\n              setIsNameClicked={setIsNameClicked}\n            />\n          }\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}