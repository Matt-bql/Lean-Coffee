{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../Styles/Body.scss\";\nimport TileContent from \"./TileContent.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Body() {\n  _s();\n\n  // State\n  const [topics, setTopics] = useState([{\n    id: 1,\n    topicTitle: \"talk about react\",\n    user: \"Steve\"\n  }]);\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\n  const [input, setInput] = useState(\"\"); //Functions\n\n  function openTopicSubmitHandler() {\n    setIsButtonClicked(true);\n    console.log(\"Open Topic Handler Working\");\n  }\n\n  function inputTopicHandler(e) {\n    setInput(e.target.value);\n    console.log(\"inputTopicHandler is sending input to state: \", input);\n  }\n\n  function submitTopicHandler() {\n    const newArr = [{\n      id: Date.now(),\n      topicTitle: input\n    }, ...topics];\n    setTopics(newArr); // setIsSubmitClicked(true);\n\n    setInput(\"\");\n    setIsButtonClicked(false);\n    console.log(\"pressed submitTopicHandler\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Body-Container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Body-Wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Title-Text-Wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create & Vote On Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Add Details Here \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content-Wrapper\",\n        children: [topics.map(topic => {\n          return /*#__PURE__*/_jsxDEV(TileContent, {\n            topic: topic\n          }, topic.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this);\n        }), !isButtonClicked ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openTopicSubmitHandler,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onInput: inputTopicHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitTopicHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Body, \"mjhl3Hz/nW2MA1nh2J4bzKr6tWo=\");\n\n_c = Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/Body.js"],"names":["React","useState","TileContent","Body","topics","setTopics","id","topicTitle","user","isButtonClicked","setIsButtonClicked","input","setInput","openTopicSubmitHandler","console","log","inputTopicHandler","e","target","value","submitTopicHandler","newArr","Date","now","map","topic"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CACnC;AAAEK,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,kBAArB;AAAyCC,IAAAA,IAAI,EAAE;AAA/C,GADmC,CAAD,CAApC;AAGA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC,CAN6B,CAQ7B;;AACA,WAASY,sBAAT,GAAkC;AAChCH,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AACD,WAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DJ,KAA7D;AACD;;AACD,WAASS,kBAAT,GAA8B;AAC5B,UAAMC,MAAM,GAAG,CAAC;AAAEf,MAAAA,EAAE,EAAEgB,IAAI,CAACC,GAAL,EAAN;AAAkBhB,MAAAA,UAAU,EAAEI;AAA9B,KAAD,EAAwC,GAAGP,MAA3C,CAAf;AACAC,IAAAA,SAAS,CAACgB,MAAD,CAAT,CAF4B,CAG5B;;AACAT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,mBACGX,MAAM,CAACoB,GAAP,CAAWC,KAAK,IAAI;AACnB,8BAAO,QAAC,WAAD;AAA4B,YAAA,KAAK,EAAEA;AAAnC,aAAkBA,KAAK,CAACnB,EAAxB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA,CADH,EAKG,CAACG,eAAD,gBACC;AAAQ,UAAA,OAAO,EAAEI,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA,kCACE;AAAO,YAAA,KAAK,EAAEF,KAAd;AAAqB,YAAA,OAAO,EAAEK;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAEI,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAnDuBjB,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\nimport \"../Styles/Body.scss\";\nimport TileContent from \"./TileContent.js\";\n\nexport default function Body() {\n  // State\n  const [topics, setTopics] = useState([\n    { id: 1, topicTitle: \"talk about react\", user: \"Steve\" },\n  ]);\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\n  const [input, setInput] = useState(\"\");\n\n  //Functions\n  function openTopicSubmitHandler() {\n    setIsButtonClicked(true);\n    console.log(\"Open Topic Handler Working\");\n  }\n  function inputTopicHandler(e) {\n    setInput(e.target.value);\n    console.log(\"inputTopicHandler is sending input to state: \", input);\n  }\n  function submitTopicHandler() {\n    const newArr = [{ id: Date.now(), topicTitle: input }, ...topics];\n    setTopics(newArr);\n    // setIsSubmitClicked(true);\n    setInput(\"\");\n    setIsButtonClicked(false);\n    console.log(\"pressed submitTopicHandler\");\n  }\n\n  return (\n    <div className='Body-Container'>\n      <div className='Body-Wrapper'>\n        <div className='Title-Text-Wrapper'>\n          <h2>Create & Vote On Topics</h2>\n          <h3> Add Details Here </h3>\n        </div>\n\n        <div className='Content-Wrapper'>\n          {topics.map(topic => {\n            return <TileContent key={topic.id} topic={topic} />;\n          })}\n          {/* Conditionals based on whether or not a button/input was clicked/used. */}\n          {!isButtonClicked ? (\n            <button onClick={openTopicSubmitHandler}>+</button>\n          ) : (\n            <div>\n              <input value={input} onInput={inputTopicHandler}></input>\n              <button onClick={submitTopicHandler}>Submit</button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}