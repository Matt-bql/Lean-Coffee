{"ast":null,"code":"var _jsxFileName = \"/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/DragandDrop/DragandDropContainer.js.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { TopicContext } from \"../Contexts/TopicContext\";\nimport Column from \"./Column.js\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DragandDropContainer() {\n  _s();\n\n  const {\n    topics\n  } = useContext(TopicContext);\n  const discussionTopics = topics.map(topic => {\n    return {\n      id: topic.id,\n      title: topic.topicTitle\n    };\n  });\n  const initialData = {\n    columns: {\n      \"column-1\": {\n        id: \"column-1\",\n        title: \"To do\",\n        taskIds: [discussionTopics]\n      } // Facilitate reordering of the columns\n\n    },\n    columnOrder: [\"column-1\"]\n  }; // console.log(initialData);\n\n  function onDragEnd(result) {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: initialData.columnOrder.map(columnId => {\n        const column = initialData.columns[columnId];\n        const tasks = column.taskIds.map(taskId => taskId); // console.log(\"column\", column);\n        // console.log(tasks);\n\n        return /*#__PURE__*/_jsxDEV(Column, {\n          column: column,\n          tasks: tasks[0]\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragandDropContainer, \"MZ9xfujjdkNbRJAWpa657GnDZUM=\");\n\n_c = DragandDropContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragandDropContainer\");","map":{"version":3,"sources":["/Users/lisab/Dev/Lean-Coffee/App-UI/my-app/src/components/DragandDrop/DragandDropContainer.js.js"],"names":["React","useContext","TopicContext","Column","DragDropContext","DragandDropContainer","topics","discussionTopics","map","topic","id","title","topicTitle","initialData","columns","taskIds","columnOrder","onDragEnd","result","destination","source","draggableId","columnId","column","tasks","taskId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAaL,UAAU,CAACC,YAAD,CAA7B;AAEA,QAAMK,gBAAgB,GAAGD,MAAM,CAACE,GAAP,CAAWC,KAAK,IAAI;AAC3C,WAAO;AAAEC,MAAAA,EAAE,EAAED,KAAK,CAACC,EAAZ;AAAgBC,MAAAA,KAAK,EAAEF,KAAK,CAACG;AAA7B,KAAP;AACD,GAFwB,CAAzB;AAIA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACP,kBAAY;AACVJ,QAAAA,EAAE,EAAE,UADM;AAEVC,QAAAA,KAAK,EAAE,OAFG;AAGVI,QAAAA,OAAO,EAAE,CAACR,gBAAD;AAHC,OADL,CAMP;;AANO,KADS;AASlBS,IAAAA,WAAW,EAAE,CAAC,UAAD;AATK,GAApB,CAP6C,CAkB7C;;AAEA,WAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,MAAf;AAAuBC,MAAAA;AAAvB,QAAuCH,MAA7C;;AACA,QAAI,CAACC,WAAL,EAAkB;AAChB;AACD;AACF;;AAED,sBACE;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEF,SAA5B;AAAA,gBACGJ,WAAW,CAACG,WAAZ,CAAwBR,GAAxB,CAA4Bc,QAAQ,IAAI;AACvC,cAAMC,MAAM,GAAGV,WAAW,CAACC,OAAZ,CAAoBQ,QAApB,CAAf;AACA,cAAME,KAAK,GAAGD,MAAM,CAACR,OAAP,CAAeP,GAAf,CAAmBiB,MAAM,IAAIA,MAA7B,CAAd,CAFuC,CAGvC;AACA;;AACA,4BAAO,QAAC,MAAD;AAAwB,UAAA,MAAM,EAAEF,MAAhC;AAAwC,UAAA,KAAK,EAAEC,KAAK,CAAC,CAAD;AAApD,WAAaD,MAAM,CAACb,EAApB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAxCuBL,oB;;KAAAA,oB","sourcesContent":["import React, { useContext } from \"react\";\nimport { TopicContext } from \"../Contexts/TopicContext\";\nimport Column from \"./Column.js\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nexport default function DragandDropContainer() {\n  const { topics } = useContext(TopicContext);\n\n  const discussionTopics = topics.map(topic => {\n    return { id: topic.id, title: topic.topicTitle };\n  });\n\n  const initialData = {\n    columns: {\n      \"column-1\": {\n        id: \"column-1\",\n        title: \"To do\",\n        taskIds: [discussionTopics],\n      },\n      // Facilitate reordering of the columns\n    },\n    columnOrder: [\"column-1\"],\n  };\n  // console.log(initialData);\n\n  function onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n  }\n\n  return (\n    <div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        {initialData.columnOrder.map(columnId => {\n          const column = initialData.columns[columnId];\n          const tasks = column.taskIds.map(taskId => taskId);\n          // console.log(\"column\", column);\n          // console.log(tasks);\n          return <Column key={column.id} column={column} tasks={tasks[0]} />;\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}